from aiogram import types
import aiogram
from aiogram.dispatcher.storage import FSMContext
from aiogram.dispatcher.filters import Text

import asyncio

from data.db import DB
from loader import dp, bot
from states.state import EditUserInfo
from keyboards import inline_keyboards as ikb
from handlers import commands as com

@dp.callback_query_handler(text='info_user')
async def call_info_user(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(EditUserInfo.id_user)
    await call.message.edit_text('<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>', reply_markup=ikb.cancel_method('cancel_info_user'))

@dp.message_handler(state=EditUserInfo.id_user)
async def edit_user_info(message: types.Message, state: FSMContext):
    try:
        _id_user = int(message.text)
    except ValueError:
        await message.answer('<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ ID!</b>', reply_markup=ikb.cancel_method('cancel_info_user'))
        return

    async with state.proxy() as data:
        data['id_user'] = _id_user

    with DB() as db:
        get_info_user = db.give_info_user('*', _id_user)
        get_ban_list_user = db.give_is_ban_users(_id_user)
    
    if get_info_user is None:
        await message.answer('<b>–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–æ—Ç–µ</b>', reply_markup=ikb.cancel_method('cancel_info_user'))
        return
    

    await message.answer(f'<b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n'
                        f'<b>UserCode:</b> {get_info_user[0]}\n'
                        f'<b>ID:</b> <code>{get_info_user[1]}</code>\n'
                        f'<b>–ë–∞–ª–∞–Ω—Å:</b> <code>{get_info_user[2]}</code> <b>RUB</b>\n'
                        f'<b>–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏:</b> {get_info_user[3]}% <b>(–æ–¥–∏–Ω —Ä–∞–∑)</b>\n'
                        f'<b>–°—Ç–∞—Ç—É—Å –ë–∞–Ω:</b> {get_ban_list_user}'.replace("True", "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üî¥").replace("False", "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üü¢"), reply_markup=ikb.select_one_user_manager(get_info_user[1]))

    await com.delete_all_message_chat(message)


@dp.callback_query_handler(text='edit_balance_user', state=EditUserInfo.id_user)
async def call_edit_balance_user(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(EditUserInfo.summ_balance)
    await call.message.edit_text('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–∞–ª–∞–Ω—Å –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å\n\n<b>–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ —Å –ø–ª—é—Å–æ–º +100 –∏–ª–∏ –º–∏–Ω—É—Å–æ–º -100</b>', reply_markup=ikb.cancel_method('cancel_info_user'))


@dp.message_handler(state=EditUserInfo.summ_balance)
async def message_add_new_balance_user(message: types.Message, state: FSMContext):
    try:
        _int_summ_balance = int(message.text)
    except ValueError:
        await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!</b>", reply_markup=ikb.cancel_method('cancel_info_user'))
        return
    
    async with state.proxy() as data:
        _id_user = data['id_user']
        
    with DB() as db:
        if '+' in message.text:
            db.give_top_up_balance_rub(_id_user, _int_summ_balance)
            try:
                await bot.send_message(_id_user, f'–í–∞—à –±–∞–ª–∞–Ω—Å –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>{message.text} RUB</b>')
            except:
                pass            
            await message.answer(f'–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{_id_user}</code> –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>{message.text} RUB</b>', reply_markup=ikb.user_edit_button())
            await state.finish()
            return
        
        if '-' in message.text:
            db.give_top_up_balance_rub(_id_user, _int_summ_balance)
            try:
                await bot.send_message(_id_user, f'–í–∞—à –±–∞–ª–∞–Ω—Å –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>{message.text} RUB</b>')
            except:
                pass
            await message.answer(f'–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{_id_user}</code> –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>{message.text} RUB</b>', reply_markup=ikb.user_edit_button())
            await state.finish()
            return

        
        db.update_multi_balance_user(_int_summ_balance, _id_user)
        try:
            await bot.send_message(_id_user, f'–í–∞—à –±–∞–ª–∞–Ω—Å –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω <b>{message.text} RUB</b>')
        except:
            pass
        await message.answer(f'–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{_id_user}</code> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω <b>{message.text} RUB</b>', reply_markup=ikb.user_edit_button())
        await state.finish()


@dp.callback_query_handler(Text(startswith='edit_status_user_'), state=EditUserInfo.id_user)
async def call_ban_user_edit(call: types.CallbackQuery, state: FSMContext):
        call_msg = call.data.split('_')
        
        async with state.proxy() as data:
            _id_user = data['id_user']

            with DB() as db:
                get_info_user = db.give_info_user('*', _id_user)
                get_ban_list_user = db.give_is_ban_users(_id_user)


            if call_msg[3] == 'ban':
                if get_ban_list_user:
                    await call.message.edit_text('<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Ç–∞–∫ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üü£</b>')

                if get_ban_list_user == False:
                    await state.set_state(EditUserInfo.info_ban_user)
                    await call.message.edit_text(f'<b>–ü—Ä–∏—à–ª–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –ë–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID</b> <code>{_id_user}</code>'
                                                 '<b>–º–∞–∫—Å–∏–º—É–º 800 —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ "-" —á—Ç–æ-–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã –ë–∞–Ω–∞ –ü—É—Å—Ç—ã–º</b>',
                                                 reply_markup=ikb.cancel_method('cancel_info_user'))
                    return
                
            if call_msg[3] == 'unban':
                if get_ban_list_user == False:
                    await call.message.edit_text('<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Ç–∞–∫ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üü£</b>')
                
                if get_ban_list_user:
                    db.update_ban_list('unban', _id_user, '-')
                    await call.message.edit_text(f'<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üü¢</b>')
            
            await asyncio.sleep(1)
            get_ban_list_user = db.give_is_ban_users(_id_user)

            try:
                await call.message.edit_text(f'<b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n'
                                            f'<b>UserCode:</b> {get_info_user[0]}\n'
                                            f'<b>ID:</b> <code>{get_info_user[1]}</code>\n'
                                            f'<b>–ë–∞–ª–∞–Ω—Å:</b> <code>{get_info_user[2]}</code> <b>RUB</b>\n'
                                            f'<b>–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏:</b> {get_info_user[3]}% <b>(–æ–¥–∏–Ω —Ä–∞–∑)</b>\n'
                                            f'<b>–°—Ç–∞—Ç—É—Å –ë–∞–Ω:</b> {get_ban_list_user}'.replace("True", "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üî¥").replace("False", "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üü¢"),
                                            reply_markup=ikb.select_one_user_manager(get_info_user[1]))
                
            except aiogram.exceptions.MessageToEditNotFound:
                print('aiogram: Message to edit not found\n\n–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
            except aiogram.exceptions.MessageNotModified:
                print('aiogram: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message\n\n'
                      '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ: —É–∫–∞–∑–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ —Ç–æ—á–Ω–æ —Ç–∞–∫–∏–µ –∂–µ, –∫–∞–∫ —Ç–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ –æ—Ç–≤–µ—Ç–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è')


@dp.message_handler(state=EditUserInfo.info_ban_user)
async def info_user_ban_handler(message: types.Message, state: FSMContext):

    if len(message.text) > 800:
        await message.answer('<b>–ú–∞–∫—Å–∏–º—É–º 800 —Å–∏–º–≤–æ–ª–æ–≤ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–∏—á–∏–Ω—ã –ë–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ "-" —á—Ç–æ-–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã –ë–∞–Ω–∞ –ü—É—Å—Ç—ã–º:</b>',
                             reply_markup=ikb.cancel_method('cancel_info_user'))
        return

    msg_user_ban = '<b>–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π!</b>'

    async with state.proxy() as data:
        _id_user = data['id_user']
    
    with DB() as db:
        db.update_ban_list('ban', _id_user, message.text)
        if message.text != '-':    
            msg_user_ban += f'\n\n<b>–ü—Ä–∏—á–∏–Ω–∞ –ë–∞–Ω–∞:</b> <i>{message.text}</i>'
            
    try:
        await bot.send_message(_id_user, msg_user_ban)
    except:
        pass
    await state.finish()
    await message.answer(f'<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üî¥!</b>\n\n–ü—Ä–∏—á–∏–Ω–∞ –ë–∞–Ω–∞: <i>{message.text}</i>', reply_markup=ikb.user_edit_button())


@dp.callback_query_handler(Text(startswith='edit_procent_user'), state=EditUserInfo.id_user)
async def call_edit_procent_user(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(EditUserInfo.procent)
    await call.message.edit_text('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç 0 –¥–æ 100 –±–µ–∑ "%"\n\n'
                                 '<b>–≠—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –µ–≥–æ –±–∞–ª–∞–Ω—Å –æ—Ç –µ–≥–æ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b>',
                                 reply_markup=ikb.cancel_method('cancel_info_user'))


@dp.message_handler(state=EditUserInfo.procent)
async def call_add_procent_user(message: types.Message, state: FSMContext):
    await com.delete_all_message_chat(message)
    try:
        _procent_user = int(message.text)
    except ValueError:
        await message.answer('<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç 0 –¥–æ 100:</b>', reply_markup=ikb.cancel_method('cancel_info_user'))
        return
    
    if _procent_user > 100:
        await message.answer('<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç 100</b>', reply_markup=ikb.cancel_method('cancel_info_user'))
        return
    
    if _procent_user < 0:
        await message.answer('<b>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç 0</b>', reply_markup=ikb.cancel_method('cancel_info_user'))
        return
    
    async with state.proxy() as data:
        _id_user = data['id_user']

    with DB() as db:
        db.update_procent_users(_procent_user, _id_user)

    await message.answer(f'<b>–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {_id_user} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω {_procent_user}</b>', reply_markup=ikb.user_edit_button())
    await state.finish()


@dp.callback_query_handler(Text(startswith='push_msg_one_user'), state=EditUserInfo.id_user)
async def call_push_msg_one_user(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(EditUserInfo.push_msg_user)
    await com.delete_all_message_chat(call.message)
    async with state.proxy() as data:
        _id_user = data['id_user']

    await call.message.edit_text(f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>{_id_user}</b> –º–∞–∫—Å–∏–º—É–º 800 —Å–∏–º–≤–æ–ª–æ–≤\n\n'
                                 '<b>[?]</b> –≠—Ç–æ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –∏–∑–≤–µ—â—ë–Ω –≤–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º\n'
                                 '<b>[?]</b> –î–ª—è –¥–≤—É—Ö—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª <b>–ê–¥–º–∏–Ω–∫–∞->–°–æ–æ–±—â–µ–Ω–∏—è</b>',
                                 reply_markup=ikb.cancel_method('cancel_info_user'))
    
@dp.message_handler(state=EditUserInfo.push_msg_user)
async def push_message_user(message: types.Message, state: FSMContext):
    await com.delete_all_message_chat(message)
    if len(message.text) > 800:
        await message.answer('<b>–ú–∞–∫—Å–∏–º—É–º 800 —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏:</b>\n'
                             f'<i>–í –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ {len(message.text)} —Å–∏–º–≤–æ–ª–æ–≤</i>',
                                 reply_markup=ikb.cancel_method('cancel_info_user'))
        return
    
    async with state.proxy() as data:
        _id_user = data['id_user']

    try:
        await bot.send_message(_id_user, f'<b>–ê–î–ú–ò–ù:</b> <i>{message.text}</i>')
    except:
        await message.answer('<b>–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∏–∑–≤–µ—Å—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>')
        await state.finish()
        return

    await state.finish()
    await message.answer('<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –±—ã–ª –∏–∑–≤–µ—â—ë–Ω!</b>',
                         reply_markup=ikb.user_edit_button())



